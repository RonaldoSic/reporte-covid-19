{"version":3,"sources":["components/nav.js","components/header.js","Data/countryData.js","Data/usDataPeople.js","components/formRegister.js","components/viewPeople.js","Data/myapiCovid.js","components/searchData.js","components/section.js","Data/guateData.js","Data/dataGlobal.js","components/footer.js","App.js","Data/titlesAndContext.js","serviceWorker.js","index.js","img/covid-19.jpg"],"names":["Nav","props","state","scrolled","classSolid","classTransparent","window","addEventListener","scrollY","setState","removeEventListener","this","updateWindiwDimensions","className","href","Component","Header","id","src","img_covid","alt","byCountry","country","a","allResponse","fetch","res","json","data","nameCountry","Country","arrayActivos","arrayConfirmados","arrayDate","arrayMuertos","arrayRecuperados","map","item","push","Active","Confirmed","Intl","DateTimeFormat","month","day","format","Date","Deaths","Recovered","labels","datasets","label","borderColor","ruta","getPeopleData","resp","arrayData","setPeopleData","method","headers","body","JSON","stringify","first_name","last_name","age","gender","department","city","then","response","catch","err","console","log","FomrRegister","setDate","date","fechaFormat","year","fecha","loadPeoplesData","allDatapeople","row","people","key","code","rowTable","handleChange","e","target","value","handleChangeInputs","name","handleSubmit","preventDefault","onSubmit","type","onChange","ViewPeople","nombres","apellidos","edad","genero","pais","departamento","municipio_ciudad","rowTableSubComponet","tdArray","searchWithBody","query","edadMin","edadMax","buscarEsto","opcionNum","cache","consulta","SearchData","datoABuscar","onsubmit","optionAux","itemSelected","edadMinAux","edadMaxAux","objetoRequest","parametro","loadDataWithBody","createGraphic","alert","onSumbit2","onChange2","submitByAge","form2","placeholder","formularioEdades","onChangeOption","valor","numOption","maxEdad","minEdad","showData","resultQuery","dataResponse","i","itemUl","man","woman","other","persona","mujeres","length","hombres","Otros","dataP","mostrarDato","componentResponse","obGrap","backgroundColor","hoverBackgroundColor","graphic","options","title","display","text","fontSize","legend","position","graphicComponent","holderInput","checked","Section","alltheCountry","getDataByCountry","datacharPaises","loadAllCountry","dataReturn","handleChangeCountry","selectPais","event","countryValue","val","datachar","dataChar","optionsChar","charLine","scales","xAxes","gridLines","titleChar","padding","fontColor","boxWidth","fontFamily","layout","right","tooltips","titleFontSize","xPadding","yPadding","bodyFontSize","bodySpacing","mode","elements","line","borderWidth","fill","point","radius","hoverRadius","hoverBorderWidth","CharBar","yAxes","ticks","beginAtZero","id_section","description","guateData","globalData","allData","Global","NewConfirmed","NewDeaths","NewRecovered","TotalDeaths","TotalRecovered","defaultProps","Footer","App","loadDataGuate","getDataGuate","dataGuate","loadDatabyCountry","dataPaises","loadDataGlobal","dataGlobal","selectPaise","registrarData","tituloMundial","parrafoMundial","tituloPaises","parrafoPaises","tituloGuate","parrafoGuate","tituloInsert","parrafInsert","tt","titleMundial","titlePaises","titleGuatemala","titleRegistrar","parrafoInsertar","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.6489aeeb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport './nav.css'\nexport default class Nav extends Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            scrolled: false,\n            classSolid:'nav nav-container solid',\n            classTransparent:'nav nav-container'\n        }\n    }\n    componentDidMount(){\n        window.addEventListener('scroll', () =>{\n            const isTop = window.scrollY > 100;\n            isTop?this.setState({scrolled: true}):this.setState({scrolled: false}); \n        })\n        // para determinar el tamanio de la pantalla \n    }\n    componentWillUnmount(){\n        window.removeEventListener('scroll');\n        window.removeEventListener(\"resize\", this.updateWindiwDimensions);\n    }\n    render() {\n        const {\n            classSolid,\n            classTransparent,\n            scrolled\n        } = this.state;\n        return (\n            // <nav className=\"nav nav-container\">\n            <nav className={scrolled?classSolid:classTransparent}>\n                <div className=\"logo-container\">\n                    <p>\n                        <a href=\"#principal\">Covid-19</a>\n                    </p>\n                </div>\n                <ul className=\"ul-menu\">\n                    <li className=\"item-menu\">\n                        <a className=\"go-to\" href=\"#mundial\">Mundial</a>\n                    </li>\n                    <li className=\"item-menu\">\n                        <a className=\"go-to\" href=\"#pais\">Por país</a>\n                    </li>\n                    <li className=\"item-menu\">\n                        <a className=\"go-to\" href=\"#guate\">Solo Guatemala</a>\n                    </li>\n                    <li className=\"item-menu\">\n                        <a className=\"go-to\" href=\"#insert-data\">Registrar caso</a>\n                    </li>\n                </ul>\n            </nav>\n        );\n    }\n}\n","import React, { Component } from 'react'\nimport './header.css'\nimport img_covid from '../img/covid-19.jpg';\nexport default class Header extends Component {\n    render() {\n        return (\n            <header id=\"principal\" className=\"header-container\">\n                <div className=\"img-container\">       \n                    <img className=\"img-header\" src={img_covid} alt=\"img-Covid\"></img>\n                </div>\n                <div className=\"info-header\">\n                    <h2>Conóce al<span> COVID 19</span></h2>\n                    <p>\n                        COVID-19 es una efermedad respiratoria nueva que se identificó por primera vez en Wuhan, China.\n                        Actualmente, la propagación se da principalmente de persona a persona.\n                        Los coronavirus son conocidos por provocar un amplio rango de enfermedades, desde un resfriado hasta infecciones respiratorias. El nuevo coronavirus en una cepa no identificada en humanos previamente.\n                    </p>\n                </div>\n            </header>\n        )\n    }\n}\n","export async function byCountry (country) {\n    let allResponse = {};\n    let res = await fetch('https://api.covid19api.com//dayone/country/'+country);\n    let data = await res.json();\n    let nameCountry = data[0].Country;\n    let arrayActivos = [];\n    let arrayConfirmados = [];\n    let arrayDate = [];\n    let arrayMuertos = [];\n    let arrayRecuperados = [];\n    \n    data.map(item => {\n        arrayActivos.push(item.Active);\n        arrayConfirmados.push(item.Confirmed);\n        arrayDate.push(new Intl.DateTimeFormat('es-MX', {month:'long', day: 'numeric'}).format(new Date(item.Date)));\n        arrayMuertos.push(item.Deaths);\n        arrayRecuperados.push(item.Recovered);\n        return ''\n    })\n    const dataSet = [\n        {\n            label:'Confirmados en '+nameCountry,\n            borderColor:'#3864CB',\n            data:arrayConfirmados\n        },\n        {\n            label:'Activos en '+nameCountry,\n            borderColor:'#5acf00',\n            data:arrayActivos\n        },\n        {\n            label:'Recuperados en '+nameCountry,\n            borderColor:'#e02b91',\n            data:arrayRecuperados\n        },\n        {\n            label: \"Fallecidos en \"+nameCountry,\n            borderColor: '#7a7a7a',\n            data:arrayMuertos,\n        }        \n    ];\n    allResponse ={labels:arrayDate, datasets:dataSet}\n    return allResponse\n}\n\nexport function searchCountry () {\n    let nombres_paises = [\n        \"Spain\", \"France\", \"Mexico\", \"Brazil\", \"Belgium\", \n        \"Germany\",\"Italy\", \"China\", \"United States of America\",\n        \"Netherlands\", \"Croatia\", \"Colombia\", \"Bolivia\", \n        \"Costa Rica\", \"Panama\", \"Paraguay\", \"Uruguay\", \n        \"Ecuador\",\"Nicaragua\", \"El Salvador\", \"Guatemala\"];    \n    return nombres_paises;\n}","\n// const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n// const ruta = 'http://localhost:4000/api/personas';\nconst ruta = `https://mysterious-sea-15774.herokuapp.com/api/personas`;\n\nexport async function getPeopleData() {\n    // const ruta = `http://127.0.0.1:4000/api/personas`;\n    const ruta =`https://mysterious-sea-15774.herokuapp.com/api/personas`\n    const resp = await fetch(ruta);\n    const arrayData = await resp.json();\n    return arrayData;    \n}\n\n// console.log(getPeopleData())\nexport async function setPeopleData(data) {    \n    fetch(ruta, {\n        method: \"POST\",\n        headers: {'Content-Type': 'application/json'},\n        body:\n            JSON.stringify({            \n                \"nombres\": data.first_name,\n                \"apellidos\": data.last_name,\n                \"edad\": data.age,\n                \"genero\": data.gender,\n                \"pais\": data.country,\n                \"departamento\": data.department,\n                \"municipio_ciudad\": data.city\n            })\n    })\n        .then(response => {\n            // console.log(response);\n        })\n        .catch(err => {\n            console.log(err);\n        });\n}\n\n","import React, { Component } from 'react'\nimport './formRegister.css'\nimport {setPeopleData, getPeopleData} from \"../Data/usDataPeople\";\n\nexport default class FomrRegister extends Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            code :'0',\n            first_name:'',\n            last_name:'',\n            age: '',\n            gender:'Masculino',\n            country:'',\n            department:'',\n            city:'',\n            rowTable: null\n        }\n    }\n    \n    async componentDidMount() {\n        this.setDate()\n    }\n    setDate =() => {\n        const date = new Date();\n        let fechaFormat = new Intl.DateTimeFormat('es-MX', { month: 'long', day: 'numeric', year:'numeric' }).format(new Date(date))\n        this.setState({fecha:fechaFormat})\n    }\n    // cargando los datos para la tabla\n    loadPeoplesData = async () =>{\n        const allDatapeople = await getPeopleData();\n        const row = allDatapeople.map(people =>{\n        \n            return(\n                <tr key={people.code} className=\"row-info\">\n                    <td>{people.first_name}</td>\n                    <td>{people.last_name}</td>\n                    <td>{people.age}</td>\n                    <td>{people.gender}</td>\n                    <td>{people.country}</td>\n                    <td>{people.department}</td>\n                    <td>{people.city}</td>\n                </tr>\n            )\n        });\n    this.setState({rowTable: row})        \n    }\n\n    handleChange = (e) => {\n        this.setState({ gender:e.target.value })\n    }\n    handleChangeInputs = (e) =>{\n            this.setState({[e.target.name]: e.target.value})\n            // console.log(e.target.name,' ',e.target.value)\n    }\n\n    handleSubmit = async (e)  =>{\n        e.preventDefault();\n        let resp = this.state;\n        await setPeopleData(resp);\n        this.setState({\n            first_name:'',\n            last_name:'',\n            age: '',\n            gender:'Masculino',\n            country:'',\n            department:'',\n            city:''\n        })\n        // await this.loadPeoplesData();\n        // console.log(res)\n        // console.log(this.state)\n    }\n\n    render() {\n        const {fecha} = this.state;\n        return (\n            <div className=\"wrapp\">\n                <div className=\"container-form\">                    \n                    <form onSubmit = {this.handleSubmit}>\n                        {/* Fecha */}\n                        <div className=\"sub-container date-container\">\n                            <h4>Fecha</h4>\n                            <div className=\"date\"><h5>{fecha}</h5></div>\n                        </div>\n                        {/* Inputs de datos personales */}\n                        <div className=\"sub-container container-datos\">\n                            <h3>Datos personales</h3>\n                            <div className=\"container-inputs\">\n                                <div className=\"inputs-item\">\n                                    <label>Nombres</label>\n                                    <input value={this.state.first_name} name=\"first_name\" type=\"text\" onChange={this.handleChangeInputs}/>\n                                </div>\n                                <div className=\"inputs-item\">                                <label>Apellidos</label>\n                                    <input value={this.state.last_name} name=\"last_name\" type=\"text\" onChange={this.handleChangeInputs} />\n                                </div>\n                                <div className=\"inputs-item\">                                \n                                    <label>Edad</label>\n                                    <input value={this.state.age} name=\"age\" type=\"number\" onChange={this.handleChangeInputs}/>\n                                </div>\n                                <div className=\"inputs-item\">                 \n                                <label>Sexo</label>               \n                                    <select value={this.state.gender} onChange={this.handleChange}>\n                                        <option>Masculino</option>\n                                        <option>Femenino</option>\n                                        <option>Otro</option>\n                                    </select>    \n                                </div>\n                            </div>\n                        </div>\n                        {/* Inputs de Ubicacion */}\n                        <div className=\"sub-container container-ubicacion\">\n                        <h3>Ubicación</h3>\n                            <div className=\"container-inputs\">\n                                <div className=\"inputs-item\">                           \n                                    <label>País</label>\n                                    <input value={this.state.country} name=\"country\" type=\"text\" onChange={this.handleChangeInputs}/>\n                                </div>\n                                <div className=\"inputs-item\">                                \n                                    <label>Departamento o estado</label>\n                                    <input value={this.state.department} name=\"department\" type=\"text\" onChange={this.handleChangeInputs} />\n                                </div>\n                                <div  className=\"inputs-item\">                                \n                                    <label>Municipio</label>\n                                    <input value={this.state.city} name=\"city\" type=\"text\" onChange={this.handleChangeInputs} />\n                                </div>\n                            </div>    \n                        </div>\n                        <div className=\"container-btn\">\n                            <button type=\"submit\">Registrar</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './viewPeople.css'\nimport {getPeopleData} from '../Data/usDataPeople'\nexport default class ViewPeople extends Component {\n    constructor(props){\n        super(props)\n        this.state ={\n            rowTableSubComponet: null,\n            tdArray: []\n        }\n    }\n    // Get data people\n    loadPeoplesData = async () =>{\n        const allDatapeople = await getPeopleData();\n        // console.log(allDatapeople,'+++')\n        const row = allDatapeople.map(people =>{        \n            return(\n                <tr key={people.id} className=\"row-info\">\n                    <td>{people.nombres}</td>\n                    <td>{people.apellidos}</td>\n                    <td>{people.edad}</td>\n                    <td>{people.genero}</td>\n                    <td>{people.pais}</td>\n                    <td>{people.departamento}</td>\n                    <td>{people.municipio_ciudad}</td>\n                </tr>\n            )\n        });\n    this.setState({rowTableSubComponet: row})        \n    }\n    async componentDidMount() {\n        await this.loadPeoplesData();\n    }    \n    render() {\n        return (\n            <div className ='card-container'>\n                <div className=\"title-card\"><h3>Registros hechos</h3></div>\n                <div className=\"data-people\">\n                    <table>\n                        <thead>\n                        <tr className=\"header-table\">\n                            <th>Nombre</th>\n                            <th>Apellido</th>\n                            <th>Edad</th>\n                            <th>Genero</th>\n                            <th>País</th>\n                            <th>Departameto</th>\n                            <th>Municipio</th>\n                        </tr> \n                        </thead>\n                        <tbody>\n                            {this.state.rowTableSubComponet}  \n                        </tbody>\n                        \n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n","\n// const url2 = 'https://jsonplaceholder.typicode.com/users';\nexport async function searchPeople(pais){\nconst url = `http://127.0.0.1:4000/api/personas/'${pais}'`;        \nlet res = await fetch(url);\nlet data = await res.json();\nreturn data;\n}\n\nexport async function searchWithBody(query){\n    // const url = `http://127.0.0.1:4000/api/personas/`;\n    const url = `https://mysterious-sea-15774.herokuapp.com/api/personas`\n    let consulta = await fetch(url, {\n        method: 'PATCH',\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify({            \n            \"edadMin\": query.edadMin,\n            'edadMax': query.edadMax,\n            'buscarEsto' : query.buscarEsto,\n            'opcionNum': query.opcionNum\n        }),\n        cache: 'no-cache'\n    });\n    let data = await consulta.json()\n    return data; \n}\n","import React, { Component } from 'react'\nimport './searchData.css'\nimport {searchWithBody} from '../Data/myapiCovid'\nimport { Doughnut } from 'react-chartjs-2';\nexport default class SearchData extends Component {\n    constructor(props){\n        super(props)\n        this.state = {            \n            holderInput:'Buscar...',\n            graphicComponent: null,\n            dataResponse: [],\n            componentResponse: null,            \n            itemSelected: 'País',            \n            datoABuscar:'',\n            optionAux: 1,\n            edadMinAux: 0,\n            edadMaxAux: 0,\n            objetoRequest: {                \n                edadMin: 0,\n                edadMax: 0,\n                buscarEsto:'',\n                parametro:'',\n                opcionNum: 1\n            },\n            mujeres:0,\n            hombres:0,\n            Otros:0,\n            formularioEdades: null\n        }\n    }    \n    // aplica al Input, coloca el valor en el state de datoAbuscar \n    onChange = async (e) =>{\n        this.setState({datoABuscar: e.target.value})         \n    }  \n    // Envia los datos al servidor para realiar las consultas  \n    onsubmit = async (e) =>{\n        e.preventDefault();                        \n        if(this.state.datoABuscar !== ''){\n        const {datoABuscar,optionAux,itemSelected,edadMinAux,edadMaxAux} =this.state;        \n        this.setState({objetoRequest: {\n            edadMin: edadMinAux,\n            edadMax: edadMaxAux,\n            buscarEsto:datoABuscar,\n            parametro:itemSelected,\n            opcionNum: optionAux\n        }})        \n        await this.loadDataWithBody();\n        await this.createGraphic();\n        }else{\n            alert('Ingresa los datos Adecuados')\n        }\n    }\n    // Sumbit para edadaes\n    onSumbit2 = async (e) =>{\n        e.preventDefault();\n        const {datoABuscar,optionAux,itemSelected,edadMinAux,edadMaxAux} =this.state;        \n        this.setState({objetoRequest: {\n            edadMin: edadMinAux,\n            edadMax: edadMaxAux,\n            buscarEsto:datoABuscar,\n            parametro:itemSelected,\n            opcionNum: optionAux\n        }})        \n        await this.loadDataWithBody();\n        await this.createGraphic();\n        // console.log(this.state)\n    }\n    // OnChange 2 para los imputs de edades\n    onChange2 = (e) =>{\n        if(e.target.name === 'min'){\n            this.setState({edadMinAux: e.target.value})\n        }else{\n            this.setState({edadMaxAux: e.target.value})\n        }        \n    }\n\n    // Metodo para crear un peque;o formulario para las edades\n    submitByAge = async () =>{\n        const form2 = <div>\n            <form onSubmit={this.onSumbit2} className=\"formulario2\">\n                <input className=\"it2\" placeholder=\"Minimo\" name=\"min\" type=\"number\" onChange={this.onChange2}/>\n                <input className=\"it2\" placeholder=\"Maximo\" name=\"max\" type=\"number\" onChange={this.onChange2}/>\n                <input className=\"it2B\" type=\"submit\" value=\"Buscar\"/>\n            </form>\n        </div>\n        this.setState({formularioEdades: form2})\n        \n    }\n\n    // Aplica para los RadiosButton para colocar el item seleccionado\n    onChangeOption = (e) =>{        \n        const valor = e.target.name;\n        let numOption = 1;        \n        switch(valor){\n            case 'País': numOption = 1; break;\n            case 'Departamento': numOption = 2; break;\n            case 'Municipio': numOption = 3; break;\n            case 'Genero': numOption = 4; break;\n            case 'Rango de edades': numOption = 5; break;\n            default:\n                console.log('Default')\n                break;\n        }        \n        let minEdad, maxEdad;\n        if(numOption === 5){\n            this.submitByAge();\n            // minEdad = prompt(\"Dime la edad minima para filtrar\")\n            // // console.log(minEdad)\n            // maxEdad = prompt(\"Dime la edad maxima para filtrar\")\n            // console.log(maxEdad)\n        }        \n        this.setState({itemSelected: valor, optionAux: numOption, edadMaxAux:maxEdad, edadMinAux:minEdad})\n        \n    }    \n    // Meto para renderizar el render de los datos retornados por el servidor\n    showData = async () => {\n        const resultQuery = this.state.dataResponse.map((people, i) => \n            <li className=\"item_result\" key={people.id}>\n                <h4 className=\"name_lastname\">{people.nombres+' '+people.apellidos}</h4>                \n            </li>                    \n        )      \n        const itemUl = <div className=\"resultSearch_container\">\n                <ul className=\"ul_result\">{resultQuery}</ul>\n            </div>  \n        // Cuantificando los hombres y mujeres\n        let man = [], woman =[], other = [];\n        this.state.dataResponse.map(persona => {            \n            switch(persona.genero){\n                case 'Masculino': \n                    man.push(persona.genero);\n                break;\n                case 'Femenino': \n                    woman.push(persona.genero);\n                break;\n                case 'Otro': \n                    other.push(persona.genero);\n                break;\n                default: break;\n            }\n            return ''\n        })\n        // console.log(`Hay ${woman.length} mujeres`)        \n        // console.log(`Hay ${man.length} hombres`)\n        // console.log(`Hay ${other.length} Gay`)\n        this.setState({mujeres:woman.length,hombres:man.length,Otros:other.length})\n        return itemUl;        \n    }\n    // Metodo para realizar la consulta con body y sacar datos del servidor\n    loadDataWithBody = async () => {\n        const {objetoRequest} = this.state;\n        const dataP = await searchWithBody(objetoRequest);\n        this.setState({dataResponse:dataP})\n        const mostrarDato = await this.showData();                \n        this.setState({componentResponse: mostrarDato})                \n    }\n    // Meto para renderizar las graficas\n    createGraphic = async () =>{\n        const {mujeres,hombres,Otros}= this.state;\n        const obGrap ={\n        labels: ['Mujeres', 'Hombres', 'Otros'],\n        datasets: [\n                {\n                    label: 'Genero',\n                    backgroundColor: [\n                        '#D72638',\n                        '#12355B',\n                        '#6457A6'\n                    ],\n                    hoverBackgroundColor: [\n                        '#EF767A',\n                        '#7692FF',\n                        '#7D7ABC'\n                    ],\n                    data: [mujeres,hombres,Otros]\n                }\n            ]\n        }\n        // \n    const graphic = <Doughnut\n        data={obGrap}\n        options={{\n            title:{\n                display:true,\n                text:'Grafica por genero',\n                fontSize:35                \n                },\n            legend:{\n                display:true,\n                position:'right'\n            }\n        }} />\n\n    this.setState({graphicComponent: graphic})\n    }\n    // Meto para testiar los metodos de consulta\n    async componentDidMount() {\n        // this.createGraphic();\n    }\n    render() {\n        const {holderInput}= this.state;\n        return (\n            <div className=\"search-container\">\n                <div>\n                    <form className=\"form-search\" onSubmit={this.onsubmit}>                    \n                        <div className=\"item-seach-form\">\n                            <input className=\"input-search text\" type=\"text\" placeholder={holderInput} onChange={this.onChange} /> \n                            <input className=\"input-search btn\" type=\"submit\" value=\"Buscar\"/>                            \n                        </div>\n                        <div className=\"options_container\">\n                            <h3>Has tu busqueda por</h3>\n                            <div className=\"allOptions\">\n                            <label className=\"labe_container\">País\n                                <input type=\"radio\" name=\"País\" \n                                onChange={this.onChangeOption} \n                                checked={this.state.itemSelected === 'País'}/>\n                                <span className=\"checkmark\"></span>\n                            </label>\n                            <label className=\"labe_container\">Departamento\n                                <input type=\"radio\" name=\"Departamento\"\n                                onChange={this.onChangeOption} \n                                checked={this.state.itemSelected === 'Departamento'} />\n                                <span className=\"checkmark\"></span>\n                            </label>\n                            <label className=\"labe_container\">Municipio\n                                <input type=\"radio\" name=\"Municipio\"\n                                onChange={this.onChangeOption} \n                                checked={this.state.itemSelected === 'Municipio'}/>\n                                <span className=\"checkmark\"></span>\n                            </label>\n                            <label className=\"labe_container\">Genero\n                                <input type=\"radio\" name=\"Genero\" \n                                onChange={this.onChangeOption} \n                                checked={this.state.itemSelected === 'Genero'}/>\n                                <span className=\"checkmark\"></span>\n                            </label>\n                            <label className=\"labe_container\">Rango de edades\n                                <input type=\"radio\" name=\"Rango de edades\" \n                                onChange={this.onChangeOption} \n                                checked={this.state.itemSelected === 'Rango de edades'}/>\n                                <span className=\"checkmark\"></span>\n                            </label>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <div>{this.state.formularioEdades}</div>\n                <div className=\"container_result\">\n                    {this.state.componentResponse}\n                </div>\n                <div>\n                    {this.state.graphicComponent}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport './section.css';\nimport { Line, Bar,  } from 'react-chartjs-2';\nimport { byCountry, searchCountry} from '../Data/countryData'\nimport FomrRegister from './formRegister'\nimport ViewPeople from './viewPeople';\nimport SearchData from './searchData'\nexport default class Section extends Component {\n    static propTypes = {\n        title:PropTypes.string.isRequired,\n        description:PropTypes.string.isRequired,\n        id_section: PropTypes.string.isRequired,\n        // dataChar: PropTypes.object.isRequired,\n        // titleChar:PropTypes.string.isRequired\n        // optionsChar: PropTypes.object.isRequired        \n    }\n    constructor(props){\n        super(props);                \n        this.state ={\n            datachar: this.props.dataChar,\n            optionsChar: this.props.dataChar,\n            charLine: {\n                    scales: {\n                        xAxes: [{\n                            gridLines: {\n                                display: false,\n                            }\n                        }]\n                    },\n                    title: {\n                        display: true,\n                        text: this.props.titleChar,\n                        fontSize: 30,\n                        padding: 30,\n                        fontColor: '#12619c',\n                    },\n                    legend: {\n                        position: 'bottom',\n                        labels: {\n                            padding: 20,\n                            boxWidth: 15,\n                            fontFamily: 'system-ui',\n                            fontColor: 'black',\n                        }\n                    },\n                    layout: {\n                        padding: {\n                            right: 50,\n                        }\n                    },\n                    tooltips: {\n                        backgroundColor: '#0584f6',\n                        titleFontSize: 20,\n                        xPadding: 20,\n                        yPadding: 20,\n                        bodyFontSize: 15,\n                        bodySpacing: 10,\n                        mode: 'x',\n                    },\n                    elements: {\n                        line: {\n                            borderWidth: 8,\n                            fill: false,\n                        },\n                        point: {\n                            radius: 6,\n                            borderWidth: 4,\n                            backgroundColor: 'white',\n                            hoverRadius: 8,\n                            hoverBorderWidth: 4,\n                        }\n                    }\n                },\n            CharBar: {\n                title: {\n                    display: true,\n                    text: \"Datos a nivel mundial\",\n                    fontSize: 25,\n                    fontColor: '#12619c'\n                },\n                legend: {\n                    display: true,\n                    position: 'bottom',\n                    text: 'Fad'\n                },\n                scales: {\n                    yAxes: [{\n                        ticks: {\n                            beginAtZero: true\n                        }\n                    }]\n                },\n                tooltips: {\n                    backgroundColor: '#0584f6',\n                    titleFontSize: 20,\n                    xPadding: 20,\n                    yPadding: 20,\n                    bodyFontSize: 15,\n                    bodySpacing: 10,\n                    mode: 'x',\n                }\n            },\n            countryValue: \"Spain\",\n            selectPais: null,\n            datacharPaises:this.props.dataChar\n            }\n    }\n    async componentDidMount() {\n        this.loadAllCountry();\n    }\n    alltheCountry = async (name) => {\n        const getDataByCountry = await byCountry(name);\n        this.setState({datacharPaises:getDataByCountry})\n    }  \n    // funcion que hace el combo-box\n    loadAllCountry = () => {\n        const allConuntrys = searchCountry();\n        const options = allConuntrys.map((pais) =>\n            <option className=\"this-country\" key={pais}>{pais}</option>\n        )\n        const dataReturn = (<select className=\"list-country\" onChange={this.handleChangeCountry}>{options}</select>);\n        this.setState({ selectPais: dataReturn })\n        return (dataReturn)\n    }\n    // evento para el combo-box\n    handleChangeCountry = async (event) => {\n        this.setState({countryValue:event.target.value})\n        const val = this.alltheCountry(this.state.countryValue)\n        // console.log(\"pais seleccionado del state\",this.state.countryValue)\n        this.setState({datacharPaises:val,\n            countryValue:event.target.value})\n    }\n\n    static defaultProps ={\n        titleChar:'Representación en gráficas'\n    }\n    render() {\n        const { id_section, title, description, dataChar, titleChar} = this.props;\n        const {charLine, CharBar, selectPais,datacharPaises} = this.state;\n        \n        return (\n            <section id={id_section}  className=\"section\">\n                <div className=\"info-section\">\n                    <h2>{title}</h2>\n                    <p>{description}</p>\n                </div>\n                {id_section===\"pais\"?<div className=\"container-select\">{selectPais}</div>:''}\n                {id_section===\"insert-data\"\n                    ?<div><FomrRegister /> <ViewPeople /> <SearchData /></div>\n                    :<div className=\"chart-section\">\n                        {id_section===\"mundial\"\n                            ?<Bar data= {dataChar} options={CharBar}/>\n                            :id_section === \"pais\"\n                                ?<Line data ={datacharPaises} options= {charLine} titleChar={titleChar}/>\n                                :<Line data ={dataChar} options= {charLine} titleChar={titleChar}/>}\n                    </div>   \n                }    \n            </section>\n        )\n    }\n}","export async function guateData () {\n    let allResponse = {};\n    let res = await fetch('https://api.covid19api.com/dayone/country/guatemala');\n    let data = await res.json();\n    let arrayActivos = [];\n    let arrayConfirmados = [];\n    let arrayDate = [];\n    let arrayMuertos = [];\n    let arrayRecuperados = [];\n    \n    data.map(item => {\n        arrayActivos.push(item.Active);\n        arrayConfirmados.push(item.Confirmed);\n        arrayDate.push(new Intl.DateTimeFormat('es-MX', {month:'long', day: 'numeric'}).format(new Date(item.Date)));\n        arrayMuertos.push(item.Deaths);\n        arrayRecuperados.push(item.Recovered);\n        return ''\n    })\n    const dataSet = [\n        {\n            label:'Confirmados',\n            borderColor:'#e94C00',\n            data:arrayConfirmados\n        },\n        {\n            label:'Activos',\n            borderColor:'#25c4AE',\n            data:arrayActivos\n        },\n        {\n            label:'Recuperados',\n            borderColor:'#54a2cf',\n            data:arrayRecuperados\n        },\n        {\n            label: \"Fallecidos\",\n            borderColor: '#e91100',\n            data:arrayMuertos,\n        }        \n    ];\n    allResponse ={labels:arrayDate, datasets:dataSet}\n    // console.log(allResponse)\n    return allResponse\n}","export async function globalData() {\n    let res = await fetch('https://api.covid19api.com/summary');\n    let response = await res.json();\n    const allData = [\n        response.Global.NewConfirmed,\n        response.Global.NewDeaths,\n        response.Global.NewRecovered,\n        response.Global.TotalDeaths,\n        response.Global.TotalRecovered,\n    ];\n    const allLabels = [\n        'Nuevos casos',\n        'Nuevos recuperados',\n        'Nuevos fallecidos',\n        'Total fallecidos',\n        'Total recuperados'\n    ]\n    const data = {\n        labels: allLabels,\n        datasets: [{\n                label: 'Datos globales',\n                data: allData,\n                backgroundColor: [\n                    '#dd52ba56',\n                    '#3cc80056',\n                    '#D3003956',\n                    '#2a2a2a56',\n                    '#0a429a56'\n                ],\n                borderColor: [\n                    '#dd52ba',\n                    '#3cc800',\n                    '#D30039',\n                    '#2a2a2a',\n                    '#0a429a'\n                ],\n                borderWidth: 2\n            }]\n    };\n    // allResponse ={labels:arrayDate, datasets:dataSet}\n    // console.log(data);\n    return data;\n}","import React, { Component } from 'react'\nimport './footer.css'\nexport default class Footer extends Component {\n    render() {\n        return (\n            <footer>\n                <div className=\"col-container\">\n                    <div className=\"noticias-nacionales nts\">\n                        <h4>Noticias</h4>\n                        <div className=\"enlaces\">\n                            <a href=\"https://www.mspas.gob.gt/index.php/noticias/covid-19/coronavirus-2019-ncov\">Corona virus en Guatemala</a>\n                            <a href=\"https://www.mspas.gob.gt/index.php/noticias/covid-19/casos\">Casos en Guatemala</a>\n                            <a href=\"https://www.bbc.com/mundo/noticias-51705060\">Mapa de infectados</a>                            \n                        </div>\n                    </div>\n                </div>                                \n                <div className=\"escod\">By ESCod</div>\n            </footer>\n        )\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Nav from './components/nav';\nimport Header from './components/header';\nimport Section from './components/section';\nimport { guateData } from './Data/guateData'\nimport { byCountry, searchCountry } from './Data/countryData'\nimport { globalData } from './Data/dataGlobal';\nimport {titlesAllSections} from './Data/titlesAndContext';\nimport Footer from './components/footer'\nexport default class App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        dataGlobal: {},\n        dataGuate: {},\n        dataPaises: {},\n        registrarData: {},\n        tituloMundial:'',\n        parrafoMundial:'',\n        tituloPaises:'',\n        parrafoPaises:'',\n        tituloGuate:'',\n        parrafoGuate:'',\n        tituloInsert:'',\n        parrafInsert:'',\n        }\n      }\n  async componentDidMount(){\n    await this.loadDataGuate();\n    await this.loadDatabyCountry('spain');\n    await this.loadDataGlobal();\n    const tt = titlesAllSections();\n    // console.log(tt)\n    this.setState({\n        tituloMundial:tt.titleMundial,\n        parrafoMundial:tt.parrafoMundial,\n        tituloPaises:tt.titlePaises,\n        parrafoPaises:tt.parrafoPaises,\n        tituloGuate:tt.titleGuatemala,\n        parrafoGuate:tt.parrafoGuate,\n        tituloInsert:tt.titleRegistrar,\n        parrafInsert:tt.parrafoInsertar\n    })\n    \n        // console.log(tt.titleRegistrar)\n  }\n  loadDataGuate = async () => {\n    const getDataGuate = await guateData();\n    this.setState({dataGuate:getDataGuate})\n  }\n  loadDatabyCountry = async (name) => {\n    const getDataByCountry = await byCountry(name);\n    // console.log(getDataByCountry);\n    this.setState({dataPaises:getDataByCountry})\n  }  \n  loadDataGlobal = async () =>{\n    const allData = await globalData();\n    this.setState({dataGlobal:allData})\n  }  \n  loadAllCountry = () =>{\n    const allConuntrys = searchCountry();\n    const options = allConuntrys.map((pais) =>\n      <option className=\"this-country\" key={pais}>{pais}</option>\n    )\n    const dataReturn = (<select onChange={this.handleChangeCountry} className=\"list-country\">{options}</select>);\n    this.setState({selectPaise:dataReturn})    \n  return (dataReturn)\n  }\n  render(){\n    const {dataGlobal, dataGuate, dataPaises,\n      tituloMundial, parrafoMundial,\n      tituloPaises, parrafoPaises, \n      tituloGuate, parrafoGuate, \n      tituloInsert, parrafInsert} = this.state;\n    return(\n      <>\n      <Nav />\n      <Header />\n      {/* seccion para info mundial */}\n        <Section\n          id_section=\"mundial\"\n          title={tituloMundial}\n          description={parrafoMundial}\n          dataChar ={dataGlobal}\n        />\n        {/* seccion para info por pais */}\n        <Section\n          id_section=\"pais\"\n          title={tituloPaises}\n          description={parrafoPaises}\n          dataChar={dataPaises}\n          titleChar='Curva de contagios de coronavirus en otros Paises'\n          // selectPais ={selectPaise}\n        />\n        {/* seccion para info de Guatemala */}\n        <Section \n          id_section =\"guate\"\n          title={tituloGuate} \n          description={parrafoGuate}\n          dataChar={dataGuate}\n          titleChar='Gráfica contagios de coronavirus en Guatemala'\n        />\n        {/* seccion para INSERT O SELECT */}\n        <Section \n          id_section=\"insert-data\"\n          title={tituloInsert}\n          description={parrafInsert}\n          />\n          {/* <footer>\n              <div className=\"col-container\">\n                  <div className=\"noticias-nacionales nts\">\n                      <h4>Noticias</h4>\n                      <div className=\"enlaces\">\n                          <a href=\"https://www.mspas.gob.gt/index.php/noticias/covid-19/coronavirus-2019-ncov\">Corona virus en Guatemala</a>\n                          <a href=\"https://www.mspas.gob.gt/index.php/noticias/covid-19/casos\">Casos en Guatemala</a>\n                          <a href=\"https://www.bbc.com/mundo/noticias-51705060\">Mapa de infectados</a>\n                      </div>\n                  </div>\n              </div>\n              <div className=\"escod\">By ESCod</div>\n          </footer> */}\n          <Footer />\n        </>\n    )\n  }\n}\n","export function titlesAllSections () {\n    const allTitleAndContext ={\n        titleMundial:'Gráfica de contagios de COVID 19 a nivel mundial',\n        parrafoMundial:'La enfermedad se propaga muy rápidamente comparada con otras pandemias recientes como la gripe A, que, entre 2009 y 2010, alcanzó 35.000 afectados. La epidemia, tras haberse paralizado en China, se ha extendido al resto del mundo, principalmente Europa, nuevo foco de la pandemia, y Estados Unidos.',\n        titlePaises: 'Reportes por paises',\n        parrafoPaises: 'El continente americano superó en las últimas horas a Europa en número de casos de covid-19, con 1.90 millones frente a los 1.78 millones del Viejo Continente, según las estadísticas de la Organización Mundial de la Salud (OMS).',\n        titleGuatemala: 'Situacion del Covid en Guatemala',\n        parrafoGuate: 'El Ministerio de Salud informó cómo evoluciona la salud de las personas que están contagiadas. Hasta el 26 de marzo de 2020, el Gobierno de Guatemala dio datos sobre quiénes eran los pacientes recuperados, pero luego dejó de brindar detalles por cuestiones de seguridad.',\n        titleRegistrar: 'Registrar casos',\n        parrafoInsertar: 'En esta sección se puede publica información para poder registrar un posile caso de COVID19.'\n    }\n    return allTitleAndContext;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/covid-19.947894b3.jpg\";"],"sourceRoot":""}